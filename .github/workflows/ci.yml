name: EnhancedFindDialogCI
on:
  push:
    tags:
      - "**"
jobs:
  Release_addon:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      # The next step is used to fix a small issue here to obtain the current tag message, which will be used as the release body. For more details
      # see https://github.com/actions/checkout/issues/290
      - name: make sure we have the correct tag information
        run: git fetch --tags --force
      - name: Obtain tag message
        uses: ericcornelissen/git-tag-annotation-action@v2
        id: tag-data
      - name: install system dependencies
        run: sudo apt install gettext
      - name: Install python
        uses: actions/setup-python@v4
        with:
          # it seems that x86 versions of python 3 are not available for linux install.
          # In this addon context it is really not important, as packaging should not deppend on architecture versions
          # However, for future NVDA related actions we might have to switch to windows runners
          python-version: '3.7'
      - name: install python dependencies
        run: |
          pip install scons
          pip install markdown
      - name: generate addon
        run: |
          rm -f *.nvda-addon || true
          scons
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: '*.nvda-addon'
          body: "${{ steps.tag-data.outputs.git-tag-annotation }}"
          fail_on_unmatched_files: true
          target_commitish: "ci/release-workflow"
          generate_release_notes: false
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo the tag message is "${{ steps.tag-data.outputs.git-tag-annotation }}"
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "🖥️ The workflow is now ready to test your code on the runner."
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}
      - run: echo "🍏 This job's status is ${{ job.status }}."
